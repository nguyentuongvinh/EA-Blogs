<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/data/jpa 
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<context:annotation-config />
	
	<context:property-placeholder location="classpath*:application.properties" />

	<bean id="propertyPlaceHolderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url"
			value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="use_sql_comments">${use_sql_comments}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="cs544.lab.ea_blogs.model" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<jpa:repositories base-package="cs544.lab.ea_blogs.repository"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />
		
<!-- 	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">  
			<list>
				<bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">  
					<property name="entityManagerFactory" ref="entityManagerFactory" />
				</bean>
			</list>
		</property>
	</bean>


	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
		<property name="webBindingInitializer">  
        Configures Spring MVC DataBinder instances  
			<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">  
				<property name="validator">
					<bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
				</property>  
			</bean>  
		</property>  
	</bean>
 -->

	<sec:http>
		<sec:intercept-url pattern="/**" access="hasAnyRole('ROLE_ANONYMOUS', 'ROLE_READER', 'ROLE_PUBLISHER', 'ROLE_ADMIN')" />

		<sec:form-login login-processing-url="/login.action" login-page="/loginRequest" 
						authentication-failure-url="/loginFailed" />
		<sec:logout logout-url="/logout.action" />
		<sec:csrf disabled="true"/>
	</sec:http>

	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, true as enabled from user where username = ?"
				authorities-by-username-query="select u.username, ur.roleSet as authority from user u, user_roleset ur where u.id = ur.User_id and u.username = ?" />
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>
